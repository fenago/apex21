Rem  Copyright ï¿½ 2020 Oracle and/or its affiliates.  All rights reserved.
Rem  Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl. 


CREATE SEQUENCE   "DEPARTMENT_LOOKUP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOPARTITION
/
CREATE TABLE  "DEPARTMENT_LOOKUP" 
   (	"DEPARTMENT_ID" NUMBER NOT NULL ENABLE, 
	"DEPARTMENT" VARCHAR2(4000) NOT NULL ENABLE, 
	 PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX  ENABLE
   )
/
CREATE OR REPLACE TRIGGER  "T_DEPARTMENT_LOOKUP" before insert or update on "DEPARTMENT_LOOKUP" for each row begin if inserting and :new."DEPARTMENT_ID" is null then 
  for c1 in (select "DEPARTMENT_LOOKUP_SEQ".nextval nv from dual) loop 
     :new."DEPARTMENT_ID" := c1.nv;   end loop; end if; end;

/
ALTER TRIGGER  "T_DEPARTMENT_LOOKUP" ENABLE
/

CREATE SEQUENCE   "HARDWARE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOPARTITION
/
CREATE TABLE  "HARDWARE" 
   (	"ID" NUMBER, 
	"SERIAL" VARCHAR2(30), 
	"CPU_TYPE" VARCHAR2(30), 
	"CPU_SPEED" NUMBER, 
	"PURCHASE_DATE" DATE, 
	"BRAND" VARCHAR2(30), 
	"MODEL" VARCHAR2(30), 
	"FORM_FACTOR" VARCHAR2(1), 
	"PURCHASE_PRICE" NUMBER, 
	"DEPARTMENT_ID" NUMBER, 
	 CONSTRAINT "HARDWARE_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   )
/
ALTER TABLE  "HARDWARE" ADD FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES  "DEPARTMENT_LOOKUP" ("DEPARTMENT_ID") ENABLE
/

CREATE OR REPLACE TRIGGER  "bi_HARDWARE" 
  before insert on "HARDWARE"              
  for each row 
begin  
  if :new."ID" is null then
    select "HARDWARE_SEQ1".nextval into :new."ID" from sys.dual;
  end if;
end;

/
ALTER TRIGGER  "bi_HARDWARE" ENABLE
/



